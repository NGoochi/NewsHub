<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Archive - NewsHub</title>
    <style>
        * { box-sizing: border-box; }
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; 
            margin: 0; 
            padding: 0; 
            background: #f8f9fa;
            min-height: 100vh;
        }
        .container { 
            max-width: 1400px; 
            margin: 0 auto; 
            padding: 40px 20px; 
        }
        .header {
            text-align: left;
            margin-bottom: 40px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .header h1 { 
            color: #2c3e50; 
            font-size: 2.5rem; 
            font-weight: 700; 
            margin: 0;
        }
        .main-nav {
            display: flex;
            gap: 20px;
        }
        .nav-link {
            color: #7f8c8d;
            text-decoration: none;
            font-weight: 500;
            padding: 8px 16px;
            border-radius: 6px;
            transition: all 0.2s ease;
        }
        .nav-link:hover {
            color: #34495e;
            background: #ecf0f1;
        }
        .nav-link.active {
            color: #34495e;
            background: #e8f4f8;
            border: 1px solid #bdc3c7;
        }
        .archive-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 30px;
        }
        .archive-card {
            background: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.06);
            border: 2px solid #e0e0e0;
            position: relative;
        }
        .archive-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        }
        .archive-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: #2c3e50;
            margin: 0 0 8px 0;
        }
        .archive-meta {
            color: #7f8c8d;
            font-size: 0.85rem;
            margin: 6px 0;
        }
        .archive-actions {
            display: flex;
            gap: 8px;
            margin-top: 16px;
            padding-top: 16px;
            border-top: 1px solid #ecf0f1;
        }
        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 6px;
            font-size: 0.9rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
        }
        .btn-restore {
            background: #27ae60;
            color: white;
            border: 1px solid #229954;
        }
        .btn-restore:hover {
            background: #229954;
        }
        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }
        .empty-state {
            text-align: center;
            color: #7f8c8d;
            font-size: 1.1rem;
            margin-top: 40px;
        }
        .archive-stats {
            background: white;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 30px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.06);
        }
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 20px;
        }
        .stat-item {
            text-align: center;
        }
        .stat-number {
            font-size: 2rem;
            font-weight: 700;
            color: #34495e;
        }
        .stat-label {
            font-size: 0.9rem;
            color: #7f8c8d;
            margin-top: 4px;
        }
        .sync-status {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: white;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            padding: 12px 16px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            font-size: 0.85rem;
            z-index: 1000;
            min-width: 200px;
        }
        .sync-indicator {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 4px;
        }
        .sync-icon {
            font-size: 1rem;
        }
        .sync-text {
            color: #7f8c8d;
            font-weight: 500;
        }
        .sync-details {
            display: flex;
            flex-direction: column;
            gap: 2px;
            color: #95a5a6;
            font-size: 0.8rem;
        }
        .sync-status.synced {
            border-color: #27ae60;
            background: #f8fff8;
        }
        .sync-status.synced .sync-icon {
            color: #27ae60;
        }
        .sync-status.synced .sync-text {
            color: #27ae60;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>NewsHub</h1>
            <nav class="main-nav">
                <a href="/" class="nav-link">Dashboard</a>
                <a href="/archive" class="nav-link active">Archive</a>
                <a href="/settings" class="nav-link">Settings</a>
            </nav>
        </div>

        <div class="archive-stats">
            <h2>Archived Projects</h2>
            <div class="stats-grid">
                <div class="stat-item">
                    <div class="stat-number" id="totalArchived"><%= archivedProjects.length %></div>
                    <div class="stat-label">Total Archived</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number" id="selectedCount">0</div>
                    <div class="stat-label">Selected</div>
                </div>
            </div>
        </div>

        <div class="archive-grid">
            <% if (archivedProjects.length > 0) { %>
                <% archivedProjects.forEach(project => { %>
                    <div class="archive-card" data-project-id="<%= project.id %>">
                        <div class="archive-title"><%= project.name %></div>
                        <div class="archive-meta">
                            Archived: <%= project.archivedAt ? new Date(project.archivedAt).toLocaleDateString() : 'Unknown' %>
                        </div>
                        <div class="archive-meta">
                            Created: <%= new Date(project.createdAt).toLocaleDateString() %>
                        </div>
                        <div class="archive-meta">
                            Articles: <%= project.articles ? project.articles.length : 0 %>
                        </div>
                        <div class="archive-actions">
                            <button class="btn btn-restore" onclick="restoreProject('<%= project.id %>', '<%= project.name %>')">
                                Restore Project
                            </button>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="empty-state">
                    <p>No archived projects found.</p>
                </div>
            <% } %>
        </div>
    </div>

    <!-- Sync Status Indicator -->
    <div class="sync-status" id="syncStatus">
        <div class="sync-indicator">
            <span class="sync-icon">ðŸ”„</span>
            <span class="sync-text">Syncing...</span>
        </div>
        <div class="sync-details">
            <span class="sync-time" id="syncTime">Last sync: <%= syncStatus.lastSync ? new Date(syncStatus.lastSync).toLocaleTimeString() : 'Never' %></span>
            <span class="sync-counts" id="syncCounts">
                <%= syncStatus.projectCount %> projects, <%= syncStatus.archivedCount %> archived
            </span>
        </div>
    </div>

    <script>
        // Restore a project from archive
        async function restoreProject(projectId, projectName) {
            if (!confirm(`Are you sure you want to restore "${projectName}"? This will move it back to the main project folders.`)) {
                return;
            }

            const button = event.target;
            const originalText = button.textContent;
            
            button.textContent = 'Restoring...';
            button.disabled = true;
            button.style.opacity = '0.6';
            
            try {
                const res = await fetch(`/api/archive/${projectId}/restore`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });
                
                if (res.ok) {
                    button.textContent = 'Restored!';
                    button.style.background = '#27ae60';
                    setTimeout(() => {
                        window.location.reload(); // Refresh to update the list
                    }, 1000);
                } else {
                    const err = await res.json();
                    button.textContent = 'Failed';
                    button.style.background = '#e74c3c';
                    setTimeout(() => {
                        button.textContent = originalText;
                        button.disabled = false;
                        button.style.opacity = '1';
                        button.style.background = '#27ae60';
                    }, 2000);
                }
            } catch (error) {
                button.textContent = 'Failed';
                button.style.background = '#e74c3c';
                setTimeout(() => {
                    button.textContent = originalText;
                    button.disabled = false;
                    button.style.opacity = '1';
                    button.style.background = '#27ae60';
                }, 2000);
            }
        }

        // Update sync status
        function updateSyncStatus() {
            const syncStatus = document.getElementById('syncStatus');
            const syncIcon = syncStatus.querySelector('.sync-icon');
            const syncText = syncStatus.querySelector('.sync-text');
            
            // Check if currently syncing
            const isSyncing = <%= syncStatus.isSyncing %>;
            
            if (isSyncing) {
                syncStatus.classList.remove('synced');
                syncIcon.textContent = 'ðŸ”„';
                syncText.textContent = 'Syncing...';
            } else {
                syncStatus.classList.add('synced');
                syncIcon.textContent = 'âœ…';
                syncText.textContent = 'Synced';
            }
        }

        // Initialize sync status
        updateSyncStatus();
    </script>
</body>
</html>
